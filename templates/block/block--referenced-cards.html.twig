{#
/**
 * @file
 * Default theme implementation to display a block.
 *
 * Available variables:
 * - $block->subject: Block title.
 * - $content: Block content.
 * - $block->module: Module that generated the block.
 * - $block->delta: An ID for the block, unique within each module.
 * - $block->region: The block region embedding the current block.
 * - $classes: String of classes that can be used to style contextually through
 *   CSS. It can be manipulated through the variable $classes_array from
 *   preprocess functions. The default values can be one or more of the
 *   following:
 *   - block: The current template type, i.e., "theming hook".
 *   - block-[module]: The module generating the block. For example, the user
 *     module is responsible for handling the default user navigation block. In
 *     that case the class would be 'block-user'.
 * - $title_prefix (array): An array containing additional output populated by
 *   modules, intended to be displayed in front of the main title tag that
 *   appears in the template.
 * - $title_suffix (array): An array containing additional output populated by
 *   modules, intended to be displayed after the main title tag that appears in
 *   the template.
 *
 * Helper variables:
 * - $classes_array: Array of html class attribute values. It is flattened
 *   into a string within the variable $classes.
 * - $block_zebra: Outputs 'odd' and 'even' dependent on each block region.
 * - $zebra: Same output as $block_zebra but independent of any block region.
 * - $block_id: Counter dependent on each block region.
 * - $id: Same output as $block_id but independent of any block region.
 * - $is_front: Flags true when presented in the front page.
 * - $logged_in: Flags true when the current user is a logged-in member.
 * - $is_admin: Flags true when the current user is an administrator.
 * - $block_html_id: A valid HTML ID and guaranteed unique.
 *
 * @ingroup templates
 *
 * @see bootstrap_preprocess_block()
 * @see template_preprocess()
 * @see template_preprocess_block()
 * @see bootstrap_process_block()
 * @see template_process()
 */
#}
{%
  set classes = [
    'block',
    'block-' ~ configuration.provider|clean_class,
    'block-' ~ plugin_id|clean_class,
    bundle ? 'block--type-' ~ bundle|clean_class,
    view_mode ? 'block--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}

{% if content['#block_content'] %}
  {% set block_content = content['#block_content'].field_article %}
{% else %}
  {% set block_content = content.content['#block_content'].field_article %}
  {% set actions = content.actions %}
{% endif %}

{% set cardArray = [] %}
{% for key , item in block_content %}
  {% set imgUrl =  file_url(block_content[key].entity.field_thumbnail.0.entity.field_media_image.0.entity.uri.value) %}
  {% set pathUrl = path('entity.node.canonical', {'node':block_content[key].entity.nid.0.value}) %}
  {% set cardArray = cardArray|merge([{
    'image' : imgUrl,
    'title': block_content[key].entity.title(),
    'date': block_content[key].entity.created.value|date('F j, Y'),
    'path': pathUrl,
    'summary': block_content[key].entity.field_summary.value
  }])
  %}
{% endfor %}
{% set data = {
  "referenceCard":{
    "data": cardArray
  },
  "label": label,
  "title_prefix": title_prefix,
  "title_suffix": title_suffix,
  "title_attributes": title_attributes
} %}

<section{{attributes.addClass(classes)}}>
  {% block content %}
    {% if actions %}
      {{ actions }}
    {% endif %}

    {% include "@molecules/06-ReferenceCards/00-reference-cards.twig" with data %}
  {% endblock %}
</section>
